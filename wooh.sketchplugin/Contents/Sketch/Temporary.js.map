{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/Temporary.js","webpack://exports/external \"sketch\""],"names":["string","NSPasteboard","generalPasteboard","stringForType","NSPasteboardTypeString","sketch","UI","message","threadDictionary","NSThread","mainThread","identifier","windowWidth","windowHeight","colorPicker","NSPanel","alloc","init","setFrame_display","NSMakeRect","setStyleMask","NSTexturedBackgroundWindowMask","NSTitledWindowMask","NSClosableWindowMask","setBackgroundColor","NSColor","whiteColor","standardWindowButton","NSWindowMiniaturizeButton","setHidden","NSWindowZoomButton","setTitle","setTitlebarAppearsTransparent","becomeKeyWindow","setLevel","NSFloatingWindowLevel","webView","WebView","initWithFrame","setMainFrameURL_","context","plugin","urlForResourceNamed","path","contentView","addSubview","center","makeKeyAndOrderFront","nil","AppController","sharedInstance","pluginManager","reloadPlugins"],"mappings":"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","file":"Temporary.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Temporary.js\");\n","import sketch from 'sketch'\n\nexport default function() {\n    let string = NSPasteboard.generalPasteboard().stringForType(NSPasteboardTypeString)\n    if (string != \"....\") {\n        sketch.UI.message(\":-)\")\n    } else {\n        //start\n        /*********/\n        /*********/\n        /*********/\n        /*********/\n        /*********/\n\n        // ColorPicker main window\n        var threadDictionary = NSThread.mainThread().threadDictionary();\n        var identifier = \"com.ashung.hung.hsl_color_picker\";\n        if (threadDictionary[identifier]) {\n            return;\n        }\n\n        // Window size\n        var windowWidth = 240,\n            windowHeight = 180;\n        var colorPicker = NSPanel.alloc().init();\n        colorPicker.setFrame_display(NSMakeRect(0, 0, windowWidth, windowHeight), true);\n        colorPicker.setStyleMask(NSTexturedBackgroundWindowMask | NSTitledWindowMask | NSClosableWindowMask);\n        colorPicker.setBackgroundColor(NSColor.whiteColor());\n\n        // show buttons?\n        //colorPicker.standardWindowButton(NSWindowCloseButton).setHidden(true);\n        colorPicker.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true);\n        colorPicker.standardWindowButton(NSWindowZoomButton).setHidden(true);\n\n        // Titlebar\n        colorPicker.setTitle(\"Xscape!\");\n        colorPicker.setTitlebarAppearsTransparent(true);\n        colorPicker.becomeKeyWindow();\n        colorPicker.setLevel(NSFloatingWindowLevel);\n        threadDictionary[identifier] = colorPicker;\n\n        // Add Web View to window\n        var webView = WebView.alloc().initWithFrame(NSMakeRect(0, -24, windowWidth, windowHeight));\n        webView.setMainFrameURL_(context.plugin.urlForResourceNamed(\"UI.html\").path());\n        colorPicker.contentView().addSubview(webView);\n        colorPicker.center();\n        colorPicker.makeKeyAndOrderFront(nil);\n\n        /*********/\n        /*********/\n        /*********/\n        /*********/\n        /*********/\n        /*********/\n        //end and reload plugin\n        AppController.sharedInstance().pluginManager().reloadPlugins()\n        sketch.UI.message(\"OK2\")\n    }\n}","module.exports = require(\"sketch\");"],"sourceRoot":""}