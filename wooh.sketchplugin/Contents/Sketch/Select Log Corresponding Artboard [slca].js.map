{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/sketch-module-google-analytics/index.js","webpack://exports/./src/Select Log Corresponding Artboard [slca].js","webpack://exports/./src/modules/Google Analytics Method.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/settings\""],"names":["doc","sketch","getSelectedDocument","Selection","selectedLayers","layers","Settings","require","LogTexts","filter","item","layerSettingForKey","undefined","length","AllArtboards","pages","forEach","concat","ArtboardIdString","String","ArtboardIds","SelecteResult","split","findIndex","item2","splice","ThisArtboardIndex","id","selected","UI","message","GA","CommandResult","track","variant","MSApplicationMetadata","metadata","Sketchinfo","version","PluginInfo","context","plugin","identifier","command","ec","ea","el"],"mappings":"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","file":"Select Log Corresponding Artboard [slca].js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Select Log Corresponding Artboard [slca].js\");\n","var Settings = require(\"sketch/settings\");\n\nvar kUUIDKey = \"google.analytics.uuid\";\nvar uuid = null\nvar uuid = NSUserDefaults.standardUserDefaults().objectForKey(kUUIDKey);\nif (!uuid) {\n    uuid = NSUUID.UUID().UUIDString();\n    NSUserDefaults.standardUserDefaults().setObject_forKey(uuid, kUUIDKey)\n}\n\nvar variant = MSApplicationMetadata.metadata().variant;\nvar source =\n    \"Sketch \" +\n    (variant == \"NONAPPSTORE\" ? \"\" : variant + \" \") +\n    Settings.version.sketch;\n\nfunction jsonToQueryString(json) {\n    return Object.keys(json)\n        .map(function(key) {\n            return encodeURIComponent(key) + \"=\" + encodeURIComponent(json[key]);\n        })\n        .join(\"&\");\n}\n\nfunction makeRequest(url, options) {\n    if (!url) {\n        return\n    }\n\n    if (options && options.makeRequest) {\n        return options.makeRequest(url)\n    }\n    if (options && options.debug) {\n        var request = NSURLRequest.requestWithURL(url)\n        var responsePtr = MOPointer.alloc().init();\n        var errorPtr = MOPointer.alloc().init();\n\n        var data = NSURLConnection.sendSynchronousRequest_returningResponse_error(request, responsePtr, errorPtr)\n        return data ? NSString.alloc().initWithData_encoding(data, NSUTF8StringEncoding) : errorPtr.value()\n    }\n\n    NSURLSession.sharedSession()\n        .dataTaskWithURL(url)\n        .resume();\n}\n\nmodule.exports = function(trackingId, hitType, props, options) {\n    var payload = {\n        v: 1,\n        tid: trackingId,\n        ds: source,\n        cid: uuid,\n        t: hitType\n    };\n\n    if (typeof __command !== \"undefined\") {\n        payload.an = __command.pluginBundle().name();\n        payload.aid = __command.pluginBundle().identifier();\n        payload.av = __command.pluginBundle().version();\n    }\n\n    if (props) {\n        Object.keys(props).forEach(function(key) {\n            payload[key] = props[key];\n        });\n    }\n\n    var url = NSURL.URLWithString(\n        \"https://www.google-analytics.com/\" + (options && options.debug ? \"debug/\" : \"\") + \"collect?\" +\n        jsonToQueryString(payload) +\n        \"&z=\" +\n        NSUUID.UUID().UUIDString()\n    );\n\n    return makeRequest(url, options)\n};","import sketch from 'sketch'\nlet doc = sketch.getSelectedDocument()\nlet Selection = doc.selectedLayers.layers\nlet Settings = require('sketch/settings')\n\nimport GA from \"./modules/Google Analytics Method\"\n\nexport default function() {\n\n    //read stored ArtboardIds info\n    let LogTexts = Selection.filter(item => Settings.layerSettingForKey(item, 'ArtboardIds') !== undefined)\n\n    //selected LogTexts num > 0\n    if (LogTexts.length > 0) {\n\n        //acquire all artboards\n        let AllArtboards = []\n        doc.pages.forEach(item => {\n            AllArtboards = AllArtboards.concat(item.layers)\n        })\n\n        //acquire log artboards ids\n        let ArtboardIdString = new String()\n        let ArtboardIds = []\n        let SelecteResult = 0\n\n        LogTexts.forEach(item => {\n            ArtboardIdString = ArtboardIdString + Settings.layerSettingForKey(item, 'ArtboardIds')\n        })\n        ArtboardIdString.split(\"_next_\").forEach(item => {\n            if (ArtboardIds.findIndex(item2 => item2 === item) === -1) {\n                ArtboardIds.splice(0, 0, item)\n            }\n        })\n\n        //select log artboards\n        ArtboardIds.forEach(item => {\n            let ThisArtboardIndex = AllArtboards.findIndex(item2 => item2.id === item)\n            if (ThisArtboardIndex !== -1) {\n                AllArtboards[ThisArtboardIndex].selected = true\n                SelecteResult = SelecteResult + 1\n            }\n        })\n\n        //toast result\n        sketch.UI.message(\"Succeed In Selecting \" + SelecteResult + \" Artboards\")\n    }\n\n    //selected LogTexts num < 0\n    else {\n        sketch.UI.message(\"请至少选中1个Log文本图层\")\n    }\n\n\n    //GA\n    GA(\"NormalResult\")\n}","let Settings = require('sketch/settings')\n\nexport default function(CommandResult) {\n    let track = require(\"sketch-module-google-analytics\")\n    let variant = MSApplicationMetadata.metadata().variant\n    let Sketchinfo = \"Sketch \" + (variant == \"NONAPPSTORE\" ? \"\" : variant + \" \") + Settings.version.sketch\n    let PluginInfo = context.plugin.identifier() + \" [v\" + context.plugin.version() + \"] \" + context.command.identifier()\n\n    track(\"UA-169300937-2\", \"event\", {\n        ec: Sketchinfo, // the event category\n        ea: PluginInfo, // the event action\n        el: CommandResult // the event label\n    })\n}","module.exports = require(\"sketch\");","module.exports = require(\"sketch/settings\");"],"sourceRoot":""}