{ "version": 3, "sources": ["webpack://exports/webpack/bootstrap", "webpack://exports/./node_modules/sketch-module-google-analytics/index.js", "webpack://exports/./src/Arrange Group Inner Layers Spacing Y [agilsy].js", "webpack://exports/./src/modules/Google Analytics Method.js", "webpack://exports/external \"sketch\"", "webpack://exports/external \"sketch/settings\""], "names": ["doc", "sketch", "getSelectedDocument", "Selection", "selectedLayers", "layers", "toRadians", "angle", "Math", "PI", "sortNumber", "a", "b", "string", "NSPasteboard", "generalPasteboard", "stringForType", "NSPasteboardTypeString", "CopyNumber", "SetSpacing", "CopiedNumberResult", "ArrangeResult", "forEach", "item", "type", "length", "PositionArray", "i", "len", "splice", "frame", "y", "sort", "MinPosition", "ArrangedIndex", "MinPositionIndex", "findIndex", "item2", "RotationPI", "transform", "rotation", "Width", "width", "Height", "height", "abs", "sin", "cos", "findParentGroup", "adjustToFit", "parent", "UI", "message", "clearContents", "GA", "Settings", "require", "CommandResult", "track", "variant", "MSApplicationMetadata", "metadata", "Appinfo", "context", "plugin", "url", "path", "split", "version", "identifier", "CommandInfo", "command", "ec", "ea", "el"], "mappings": ";;;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,eAAe,mBAAO,CAAC,wCAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AACA,IAAIA,GAAG,GAAGC,6CAAM,CAACC,mBAAP,EAAV;AACA,IAAIC,SAAS,GAAGH,GAAG,CAACI,cAAJ,CAAmBC,MAAnC;AAEA;AAEe,2EAAW;AAEtB;AACA,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,WAAOA,KAAK,IAAIC,IAAI,CAACC,EAAL,GAAU,GAAd,CAAZ;AACH,GALqB,CAOtB;;;AACA,WAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACtB,WAAOD,CAAC,GAAGC,C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", "file": "Arrange Group Inner Layers Spacing Y [agilsy].js", "sourcesContent": [" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Arrange Group Inner Layers Spacing Y [agilsy].js\");\n", "var Settings = require(\"sketch/settings\");\n\nvar kUUIDKey = \"google.analytics.uuid\";\nvar uuid = null\nvar uuid = NSUserDefaults.standardUserDefaults().objectForKey(kUUIDKey) + '-' + context.plugin.url().path().split('/')[context.plugin.url().path().split('/').findIndex(item => item === 'Users') + 1];\nif (!uuid) {\n    uuid = NSUUID.UUID().UUIDString();\n    NSUserDefaults.standardUserDefaults().setObject_forKey(uuid, kUUIDKey)\n}\n\nvar variant = MSApplicationMetadata.metadata().variant;\nvar source =\n    \"Sketch \" +\n    (variant == \"NONAPPSTORE\" ? \"\" : variant + \" \") +\n    Settings.version.sketch;\n\nfunction jsonToQueryString(json) {\n    return Object.keys(json)\n        .map(function(key) {\n            return encodeURIComponent(key) + \"=\" + encodeURIComponent(json[key]);\n        })\n        .join(\"&\");\n}\n\nfunction makeRequest(url, options) {\n    if (!url) {\n        return\n    }\n\n    if (options && options.makeRequest) {\n        return options.makeRequest(url)\n    }\n    if (options && options.debug) {\n        var request = NSURLRequest.requestWithURL(url)\n        var responsePtr = MOPointer.alloc().init();\n        var errorPtr = MOPointer.alloc().init();\n\n        var data = NSURLConnection.sendSynchronousRequest_returningResponse_error(request, responsePtr, errorPtr)\n        return data ? NSString.alloc().initWithData_encoding(data, NSUTF8StringEncoding) : errorPtr.value()\n    }\n\n    NSURLSession.sharedSession()\n        .dataTaskWithURL(url)\n        .resume();\n}\n\nmodule.exports = function(trackingId, hitType, props, options) {\n    var payload = {\n        v: 1,\n        tid: trackingId,\n        ds: source,\n        cid: uuid,\n        t: hitType\n    };\n\n    if (typeof __command !== \"undefined\") {\n        payload.an = __command.pluginBundle().name();\n        payload.aid = __command.pluginBundle().identifier();\n        payload.av = __command.pluginBundle().version();\n    }\n\n    if (props) {\n        Object.keys(props).forEach(function(key) {\n            payload[key] = props[key];\n        });\n    }\n\n    var url = NSURL.URLWithString(\n        \"https://www.google-analytics.com/\" + (options && options.debug ? \"debug/\" : \"\") + \"collect?\" +\n        jsonToQueryString(payload) +\n        \"&z=\" +\n        NSUUID.UUID().UUIDString()\n    );\n\n    return makeRequest(url, options)\n};", "import sketch from 'sketch'\nlet doc = sketch.getSelectedDocument()\nlet Selection = doc.selectedLayers.layers\n\nimport GA from \"./modules/Google Analytics Method\"\n\nexport default function() {\n\n    //angle convertion function\n    function toRadians(angle) {\n        return angle * (Math.PI / 180);\n    }\n\n    //number sorting function\n    function sortNumber(a, b) {\n        return a - b\n    }\n\n    //main function begins\n    let string = NSPasteboard.generalPasteboard().stringForType(NSPasteboardTypeString)\n    let CopyNumber = (string - 0) * 1\n    let SetSpacing\n    let CopiedNumberResult = 1\n    let ArrangeResult = 0\n\n    if (CopyNumber >= 0 || CopyNumber < 0) {\n        SetSpacing = CopyNumber\n    } else {\n        SetSpacing = 0\n        CopiedNumberResult = 0\n    }\n\n    Selection.forEach(item => {\n\n        if (item.type === \"Group\" && item.layers.length > 1) {\n\n            let PositionArray = []\n            for (let i = 0, len = item.layers.length; i < len; i++) {\n                PositionArray.splice(0, 0, item.layers[i].frame.y)\n            }\n            PositionArray = PositionArray.sort(sortNumber)\n            let MinPosition = PositionArray[0]\n\n            let ArrangedIndex = []\n            for (let i = 0, len = PositionArray.length; i < len; i++) {\n                let MinPositionIndex = item.layers.findIndex(item2 => item2.frame.y === PositionArray[i])\n                item.layers[MinPositionIndex].frame.y = item.layers[MinPositionIndex].frame.y + 0.00000000001\n                ArrangedIndex.splice(ArrangedIndex.length, 0, MinPositionIndex)\n            }\n\n            for (let i = 0, len = ArrangedIndex.length; i < len; i++) {\n                item.layers[ArrangedIndex[i]].frame.y = MinPosition\n                let RotationPI = toRadians(item.layers[ArrangedIndex[i]].transform.rotation)\n                let Width = item.layers[ArrangedIndex[i]].frame.width\n                let Height = item.layers[ArrangedIndex[i]].frame.height\n                MinPosition = MinPosition + Math.abs(Width * Math.sin(RotationPI)) + Math.abs(Height * Math.cos(RotationPI)) + SetSpacing\n            }\n\n            //adjust parent groups' frame\n            let i = 0\n            let findParentGroup = item\n            for (; i < 1;) {\n                if (findParentGroup.type === \"Group\") {\n                    findParentGroup.adjustToFit()\n                    findParentGroup = findParentGroup.parent\n                } else {\n                    i = 1\n                }\n            }\n            ArrangeResult = 1\n\n        }\n    })\n\n    if (CopiedNumberResult === 0 && ArrangeResult === 1) {\n        sketch.UI.message(\"Try copying a Number~\")\n    }\n\n    //empty pasteboard\n    NSPasteboard.generalPasteboard().clearContents()\n        //GA\n    GA(\":-)\")\n}", "let Settings = require('sketch/settings')\n\nexport default function(CommandResult) {\n    let track = require(\"sketch-module-google-analytics\")\n    let variant = MSApplicationMetadata.metadata().variant\n    let Appinfo = context.plugin.url().path().split('/')[context.plugin.url().path().split('/').findIndex(item => item === 'Users') + 1] + \"-Skth\" + (variant == \"NONAPPSTORE\" ? \"\" : variant + \" \") + Settings.version.sketch + \"-\" + context.plugin.identifier() + \" [\" + context.plugin.version() + \"]\"\n    let CommandInfo = context.command.identifier()\n\n    track(\"UA-169300937-3\", \"event\", {\n        ec: Appinfo, // the event category\n        ea: CommandInfo, // the event action\n        el: CommandResult // the event label\n    })\n}", "module.exports = require(\"sketch\");", "module.exports = require(\"sketch/settings\");"], "sourceRoot": "" }