{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/sketch-module-google-analytics/index.js","webpack://exports/./src/Auto Refresh Settings [ars].js","webpack://exports/./src/Preview In Browser [pib].js","webpack://exports/./src/modules/xscapeFunctions.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/settings\"","webpack://exports/external \"sketch/ui\""],"names":["doc","sketch","getSelectedDocument","selection","selectedLayers","layers","UI","require","Settings","artboard","autoRefreshKey","getInputFromUser","type","INPUT_TYPE","possibleValues","err","value","setSessionVariable","length","i","getParentArtboard","selectedPage","find","item","message","artboardBrowse","GA","sessionVariable","name","autoRefreshHandler","refreshImg","autoRefreshHandlerSave","pageTitle","customBlockKey","scaleValue","artboardname","replace","filename","NSTemporaryDirectory","sketchObject","saveArtboardOrSlice_toFile","scaleArtboard","htmlContent","NSString","stringWithString_","frame","width","colorToRGBA","backgroundColor","filepath","dataUsingEncoding_","NSUTF8StringEncoding","writeToFile_atomically_","file","NSURL","fileURLWithPath","NSWorkspace","sharedWorkspace","openFile","path","layer","times","rect","absoluteInfluenceRect","request","MSExportRequest","new","scale","color","rgbaValue","red","toFixed","green","blue","alpha","selections","copyStringToPasteboard","pasteboard","NSPasteboard","generalPasteboard","clearContents","writeObjects","dateFormat","Date","prototype","format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","RegExp","$1","getFullYear","substr","k","symbolLooper","counts","WriteSymbolInfo","item1","item2","item3","JudgeSymbolId","ThisIndex","ReadSymbolInfo","symbolMaster","ThisLibrary","SelectedSymbols","filter","JudgeSymbolResult","symbolId","findIndex","master","getLibrary","symbolReferences","getImportableSymbolReferencesForDocument","import","DocSymbols","forEach","CommandResult","track","variant","MSApplicationMetadata","metadata","Appinfo","context","plugin","url","split","version","identifier","CommandInfo","command","ec","ea","el","userInfo","set","methodOrObject","key","methodOrObjectType","setSettingForKey","setGlobalSettingForKey","setDocumentSettingForKey","setLayerSettingForKey","get","settingForKey","globalSettingForKey","documentSettingForKey","keyValue","layerSettingForKey","callWebviewFunction","functionName","functionPara","browserWindow","webContents","executeJavaScript","JSON","stringify","then","res","sendWebviewInfo","objectOrString","getWebviewInfo","infoKey","on","infoValue","sendPluginInfo","window","postMessage","getPluginInfo"],"mappings":"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","file":"Auto Refresh Settings [ars].js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Auto Refresh Settings [ars].js\");\n","var Settings = require(\"sketch/settings\");\n\nvar kUUIDKey = \"google.analytics.uuid\";\nvar uuid = null\nvar uuid = NSUserDefaults.standardUserDefaults().objectForKey(kUUIDKey) + '-' + context.plugin.url().path().split('/')[context.plugin.url().path().split('/').findIndex(item => item === 'Users') + 1];\nif (!uuid) {\n    uuid = NSUUID.UUID().UUIDString();\n    NSUserDefaults.standardUserDefaults().setObject_forKey(uuid, kUUIDKey)\n}\n\nvar variant = MSApplicationMetadata.metadata().variant;\nvar source =\n    \"Sketch \" +\n    (variant == \"NONAPPSTORE\" ? \"\" : variant + \" \") +\n    Settings.version.sketch;\n\nfunction jsonToQueryString(json) {\n    return Object.keys(json)\n        .map(function(key) {\n            return encodeURIComponent(key) + \"=\" + encodeURIComponent(json[key]);\n        })\n        .join(\"&\");\n}\n\nfunction makeRequest(url, options) {\n    if (!url) {\n        return\n    }\n\n    if (options && options.makeRequest) {\n        return options.makeRequest(url)\n    }\n    if (options && options.debug) {\n        var request = NSURLRequest.requestWithURL(url)\n        var responsePtr = MOPointer.alloc().init();\n        var errorPtr = MOPointer.alloc().init();\n\n        var data = NSURLConnection.sendSynchronousRequest_returningResponse_error(request, responsePtr, errorPtr)\n        return data ? NSString.alloc().initWithData_encoding(data, NSUTF8StringEncoding) : errorPtr.value()\n    }\n\n    NSURLSession.sharedSession()\n        .dataTaskWithURL(url)\n        .resume();\n}\n\nmodule.exports = function(trackingId, hitType, props, options) {\n    var payload = {\n        v: 1,\n        tid: trackingId,\n        ds: source,\n        cid: uuid,\n        t: hitType\n    };\n\n    if (typeof __command !== \"undefined\") {\n        payload.an = __command.pluginBundle().name();\n        payload.aid = __command.pluginBundle().identifier();\n        payload.av = __command.pluginBundle().version();\n    }\n\n    if (props) {\n        Object.keys(props).forEach(function(key) {\n            payload[key] = props[key];\n        });\n    }\n\n    var url = NSURL.URLWithString(\n        \"https://www.google-analytics.com/\" + (options && options.debug ? \"debug/\" : \"\") + \"collect?\" +\n        jsonToQueryString(payload) +\n        \"&z=\" +\n        NSUUID.UUID().UUIDString()\n    );\n\n    return makeRequest(url, options)\n};","import sketch from 'sketch'\nimport { GA } from \"./modules/xscapeFunctions\"\nlet doc = sketch.getSelectedDocument(),\n    selection = doc.selectedLayers.layers,\n    UI = require('sketch/ui'),\n    Settings = require('sketch/settings'),\n    artboard = 0\nimport { artboardBrowse } from \"./Preview In Browser [pib]\"\n\nexport default function() {\n    let autoRefreshKey\n\n    UI.getInputFromUser(\n        \"Choose Auto Refresh Mode\", {\n            type: UI.INPUT_TYPE.selection,\n            possibleValues: [\"No auto refresh\", \"Auto refresh @1x\", \"Auto refresh @2x\", \"Refresh when saving document @1x\", \"Refresh when saving document @2x\"],\n        },\n        (err, value) => {\n            if (err) {\n                return\n            } else {\n                Settings.setSessionVariable('autoRefreshKey', value)\n                autoRefreshKey = value\n            }\n        }\n    )\n\n    //setDefaultSelectedArtboard\n    if (selection.length > 0) {\n        for (let i = 0; artboard == 0 && i < selection.length; i++) {\n            artboard = selection[i].getParentArtboard() || selection[i]\n            if (artboard.type !== \"Artboard\") {\n                artboard = 0\n            }\n        }\n    }\n\n    if (artboard == 0 && doc.selectedPage.layers.find(item => item.type === \"Artboard\")) {\n        artboard = doc.selectedPage.layers.find(item => item.type === \"Artboard\")\n    }\n\n    //toastMessage\n    if (autoRefreshKey === \"Auto refresh @2x\") {\n        sketch.UI.message('Auto Refresh In Browser: On')\n        artboardBrowse(artboard, \"AutoRefreshing\", false, 2)\n    } else if (autoRefreshKey === \"Auto refresh @1x\") {\n        sketch.UI.message('Auto Refresh In Browser: On')\n        artboardBrowse(artboard, \"AutoRefreshing\", false, 1)\n    } else if (autoRefreshKey === \"Refresh when saving document @2x\") {\n        sketch.UI.message('It Will Refresh When You Save Document Pressing Command + S')\n        artboardBrowse(artboard, \"AutoRefreshing\", false, 2)\n    } else if (autoRefreshKey === \"Refresh when saving document @1x\") {\n        sketch.UI.message('It Will Refresh When You Save Document Pressing Command + S')\n        artboardBrowse(artboard, \"AutoRefreshing\", false, 1)\n    } else {\n        sketch.UI.message('Auto Refresh In Browser: Off')\n            //artboardBrowse(artboard, artboard.name, true)\n    }\n\n    //GA\n    GA(autoRefreshKey)\n}","import sketch from 'sketch'\nimport { GA } from \"./modules/xscapeFunctions\"\n//thank gaddafirusli\n\nlet doc = sketch.getSelectedDocument(),\n    Settings = require('sketch/settings'),\n    autoRefreshKey = Settings.sessionVariable('autoRefreshKey'),\n    selection = doc.selectedLayers.layers,\n    artboard = 0\n\nif (selection.length > 0) {\n    for (let i = 0; artboard == 0 && i < selection.length; i++) {\n        artboard = selection[i].getParentArtboard() || selection[i]\n        if (artboard.type !== \"Artboard\") {\n            artboard = 0\n        }\n    }\n}\n\nexport default function() {\n    if (autoRefreshKey === \"Auto refresh @2x\" || autoRefreshKey === \"Refresh when saving document @2x\") {\n        artboardBrowse(artboard, \"AutoRefreshing\", false, 2)\n    } else if (autoRefreshKey === \"Auto refresh @1x\" || autoRefreshKey === \"Refresh when saving document @1x\") {\n        artboardBrowse(artboard, \"AutoRefreshing\", false, 1)\n    } else {\n        artboardBrowse(artboard, artboard.name, true, 2)\n    }\n\n    //GA\n    GA(\":-)\")\n}\n\nexport function autoRefreshHandler() {\n    if (autoRefreshKey === \"Auto refresh @2x\") {\n        refreshImg(2)\n        GA(\"autoRefresh@2x\")\n    } else if (autoRefreshKey === \"Auto refresh @1x\") {\n        refreshImg(1)\n        GA(\"autoRefresh@1x\")\n    }\n}\n\nexport function autoRefreshHandlerSave() {\n    if (autoRefreshKey === \"Refresh when saving document @2x\") {\n        refreshImg(2)\n        GA(\"saveRefresh@2x\")\n    } else if (autoRefreshKey === \"Refresh when saving document @1x\") {\n        refreshImg(1)\n        GA(\"saveRefresh@1x\")\n    }\n}\n\n//functions\nexport function artboardBrowse(artboard, pageTitle, customBlockKey, scaleValue) {\n    if (artboard === 0) {\n        sketch.UI.message(\"Please Select 1 Artboard\")\n    } else {\n        let artboardname = pageTitle\n        artboardname = artboardname.replace(/['|'|/|#|.|\\\\|\"|\"]/g, '')\n        let filename = NSTemporaryDirectory() + artboardname + \".png\"\n        doc.sketchObject.saveArtboardOrSlice_toFile(scaleArtboard(artboard, scaleValue), filename)\n\n        //htmlContent\n        let htmlContent = NSString.stringWithString_(\n            \"<html>\\\n            <head><meta charset='UTF-8'></head>\" +\n            \"<body id='\" + customBlockKey + \"'>\\\n            <img id='mainImg' width=\" + (artboard.sketchObject.frame()).width() + \" src='./\" + artboardname + \".png' center top no-repeat;'>\\\n            <div id='refreshBlock' onClick='refreshBlock()'>Stop Refreshing</div>\\\n            </body>\\\n            <style type='text/css'>\\\n            body {\\\n                text-align: center;\\\n                margin: 0;\\\n                padding: 0;\\\n                background:\" + colorToRGBA(artboard.sketchObject.backgroundColor()) + \";}\\\n            body::-webkit-scrollbar {\\\n                display: none;}\\\n            #refreshBlock {\\\n                opacity: .3;\\\n                position: fixed;\\\n                right: 20px;\\\n                bottom: 10px;\\\n                background: rgba(0, 0, 0, .8);\\\n                border-radius: 100px;\\\n                font-family: sans - serif;\\\n                font-size: 12px;\\\n                padding: 1px 8px;\\\n                color: white;\\\n                cursor: pointer;\\\n                user-select: none;}\\\n            #refreshBlock:hover {opacity: .9;\\\n                transition: .25s;}\\\n            </style>\\\n            <script>\\\n            let stopRefreshKey = JSON.parse(document.getElementsByTagName('body')[0].id);\\\n            if (stopRefreshKey == true) {document.getElementById('refreshBlock').remove();};\\\n            function workLoop(deadline) {\\\n                if (stopRefreshKey == false && deadline.timeRemaining() > 1 ) {\\\n                    document.getElementById('mainImg').src=document.getElementById('mainImg').src+'?t='+Math.random();\\\n                };\\\n                setTimeout('window.requestIdleCallback(workLoop)',1000);\\\n            };\\\n            window.requestIdleCallback(workLoop);\\\n            let refreshBlock = function() {\\\n                if (stopRefreshKey == false) { stopRefreshKey = true; document.getElementById('refreshBlock').innerHTML='Continue To Refresh';}\\\n                else { location.reload()\\\n                    /*stopRefreshKey = false; window.requestIdleCallback(workLoop); document.getElementById('refreshBlock').innerHTML='Stop Refreshing';*/};\\\n            };\\\n            </script>\\\n            </html>\"\n        )\n\n        let filepath = NSTemporaryDirectory() + artboardname + \".html\";\n        htmlContent.dataUsingEncoding_(NSUTF8StringEncoding).writeToFile_atomically_(filepath, true);\n        let file = NSURL.fileURLWithPath(filepath)\n        NSWorkspace.sharedWorkspace().openFile(file.path())\n    }\n}\n\nfunction refreshImg(scaleValue) {\n    if (artboard !== 0) {\n        let artboardname = \"AutoRefreshing\"\n        artboardname = artboardname.replace(/['|'|/|#|.|\\\\|\"|\"]/g, '')\n        let filename = NSTemporaryDirectory() + artboardname + \".png\"\n        doc.sketchObject.saveArtboardOrSlice_toFile(scaleArtboard(artboard, scaleValue), filename)\n        sketch.UI.message(\"Browser Preview Refreshing\")\n    }\n}\n\nfunction scaleArtboard(layer, times) {\n    let rect = layer.sketchObject.absoluteInfluenceRect()\n    let request = MSExportRequest.new()\n    request.rect = rect\n    request.scale = times\n    return request\n}\n\nfunction colorToRGBA(color) {\n    let rgbaValue = \"rgba(\" + (color.red() * 255).toFixed(0) + \",\" + (color.green() * 255).toFixed(0) + \",\" + (color.blue() * 255).toFixed(0) + \",\" + color.alpha().toFixed(2) + \")\";\n    return rgbaValue;\n}","import sketch from 'sketch'\nlet Settings = require('sketch/settings'),\n    doc = sketch.getSelectedDocument(),\n    selections = doc.selectedLayers.layers\n\nexport const copyStringToPasteboard = item => {\n    let pasteboard = NSPasteboard.generalPasteboard();\n    pasteboard.clearContents();\n    pasteboard.writeObjects([item]);\n}\n\nexport const dateFormat = () => {\n    Date.prototype.format = function(fmt) {\n        var o = {\n            \"M+\": this.getMonth() + 1, //月份\n            \"d+\": this.getDate(), //日\n            \"h+\": this.getHours(), //小时\n            \"m+\": this.getMinutes(), //分\n            \"s+\": this.getSeconds(), //秒\n            \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n            \"S\": this.getMilliseconds() //毫秒\n        };\n\n        if (/(y+)/.test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        }\n\n        for (var k in o) {\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n                fmt = fmt.replace(\n                    RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n            }\n        }\n        return fmt;\n    }\n}\n\nexport const symbolLooper = counts => {\n    //function: WriteSymbolInfo\n    let WriteSymbolInfo = function(item1, item2, item3) {\n        Settings.setSessionVariable('ReadSymbolInfo', { JudgeSymbolId: item1, ThisIndex: item2 })\n    }\n\n    //判断是否有 WriteSymbolInfo 避免报错\n    if (!Settings.sessionVariable('ReadSymbolInfo')) {\n        Settings.setSessionVariable('ReadSymbolInfo', { JudgeSymbolId: null, ThisIndex: null })\n    }\n    let ReadSymbolInfo = Settings.sessionVariable('ReadSymbolInfo')\n    let ThisIndex, symbolMaster, ThisLibrary\n\n    //获取选中的 symbol\n    let SelectedSymbols = selections.filter(item => item.type === \"SymbolInstance\")\n\n    //判断是否同类 symbol\n    let JudgeSymbolId, JudgeSymbolResult\n    if (SelectedSymbols.length !== 1) {\n        JudgeSymbolId = SelectedSymbols[0].symbolId\n        JudgeSymbolResult = SelectedSymbols.findIndex(item => item.symbolId !== JudgeSymbolId)\n    }\n    if (JudgeSymbolResult !== -1) {\n        sketch.UI.message(\"Please Select Symbol With Same Master\")\n    }\n\n    //开始主要功能\n    else {\n        //所选为 library symbol 时\n        ThisLibrary = SelectedSymbols[0].master.getLibrary()\n        if (ThisLibrary) {\n            let symbolReferences = ThisLibrary.getImportableSymbolReferencesForDocument(doc)\n\n            //判断是否需要重新获取 ThisIndex\n            if (JudgeSymbolId === ReadSymbolInfo.JudgeSymbolId) {\n                ThisIndex = ReadSymbolInfo.ThisIndex\n            } else {\n                ThisIndex = symbolReferences.findIndex(item => item.import().symbolId === JudgeSymbolId)\n            }\n\n            //ThisIndex + counts 超出正常范围时\n            if (counts > 0) {\n                if (counts > symbolReferences.length) {\n                    counts = counts - symbolReferences.length\n                }\n                if (ThisIndex + counts >= symbolReferences.length) {\n                    ThisIndex = ThisIndex - symbolReferences.length\n                }\n            } else {\n                if (-counts > symbolReferences.length) {\n                    counts = -(-counts - symbolReferences.length)\n                }\n                if (ThisIndex + counts < 0) {\n                    ThisIndex = symbolReferences.length - ThisIndex\n                }\n            }\n\n            //获取待替换 symbolMaster\n            symbolMaster = symbolReferences[ThisIndex + counts].import()\n        }\n\n        //所选为 local symbol 时 \n        else {\n            //不能用 let DocSymbols =  doc.getSymbols(), 会取到引入的其它 library symbol\n            let DocSymbols = sketch.find('[type=\"SymbolMaster\"]')\n\n            //判断是否需要重新获取 ThisIndex\n            if (JudgeSymbolId === ReadSymbolInfo.JudgeSymbolId) {\n                ThisIndex = ReadSymbolInfo.ThisIndex\n            } else {\n                ThisIndex = DocSymbols.findIndex(item => item.symbolId === JudgeSymbolId)\n            }\n\n            //ThisIndex + counts 超出正常范围时\n            if (counts > 0) {\n                if (counts > DocSymbols.length) {\n                    counts = counts - DocSymbols.length\n                }\n                if (ThisIndex + counts >= DocSymbols.length) {\n                    ThisIndex = ThisIndex - DocSymbols.length\n                }\n            } else {\n                if (-counts > DocSymbols.length) {\n                    counts = -(-counts - DocSymbols.length)\n                }\n                if (ThisIndex + counts < 0) {\n                    ThisIndex = DocSymbols.length - ThisIndex\n                }\n            }\n\n            //获取待替换 symbolMaster\n            symbolMaster = DocSymbols[ThisIndex + counts]\n        }\n    }\n\n    sketch.UI.message(symbolMaster.name)\n    SelectedSymbols.forEach(item => item.master = symbolMaster)\n\n    //储存 symbol 临时信息\n    WriteSymbolInfo(symbolMaster.symbolId, ThisIndex + counts)\n}\n\nexport const GA = CommandResult => {\n    let track = require(\"sketch-module-google-analytics\"),\n        variant = MSApplicationMetadata.metadata().variant,\n        Appinfo = context.plugin.url().path().split('/')[context.plugin.url().path().split('/').findIndex(item => item === 'Users') + 1] + \"-Skth\" + (variant == \"NONAPPSTORE\" ? \"\" : variant + \" \") + Settings.version.sketch + \"-\" + context.plugin.identifier() + \" [\" + context.plugin.version() + \"]\",\n        CommandInfo = context.command.identifier()\n\n    track(\"UA-169300937-3\", \"event\", {\n        ec: Appinfo, // the event category\n        ea: CommandInfo, // the event action\n        el: CommandResult // the event label\n    })\n}\n\nexport const userInfo = {\n    set: function(methodOrObject, key, value) {\n        let methodOrObjectType = (methodOrObject.type) ? methodOrObject.type : methodOrObject\n        switch (methodOrObjectType) {\n            case \"ss\":\n                Settings.sessionVariable(key, value)\n                break\n            case \"p\":\n                Settings.setSettingForKey(key, value)\n                break\n            case \"s\":\n                Settings.setGlobalSettingForKey(key, value)\n                break\n            case \"d\":\n                Settings.setDocumentSettingForKey(methodOrObject, key, value)\n                break\n            default:\n                //judge if it's a layer type by a frame parameter\n                if (methodOrObject.frame) {\n                    Settings.setLayerSettingForKey(methodOrObject, key, value)\n                }\n                break\n        }\n    },\n    get: function(methodOrObject, key) {\n        let methodOrObjectType = (methodOrObject.type) ? methodOrObject.type : methodOrObject\n        switch (methodOrObjectType) {\n            case \"ss\":\n                return Settings.sessionVariable(key)\n            case \"p\":\n                return Settings.settingForKey(key)\n            case \"s\":\n                return Settings.globalSettingForKey(key)\n            case \"d\":\n                return Settings.documentSettingForKey(methodOrObject, key)\n            default:\n                let keyValue\n                    //judge if it's a layer type by a frame parameter\n                if (methodOrObject.frame) {\n                    keyValue = Settings.layerSettingForKey(methodOrObject, key)\n                }\n                return keyValue\n        }\n    }\n}\n\n//plugin calls webview function\nexport const callWebviewFunction = (functionName, functionPara) => browserWindow.webContents.executeJavaScript(\n    `${functionName}(${typeof functionPara === 'object' ? JSON.stringify(functionPara) : functionPara})`\n).then(res => res)\n\n//plugin sends webview info\nexport const sendWebviewInfo = objectOrString => callWebviewFunction('getFromPlugin', objectOrString)\n\n//plugin gets webview info\nexport const getWebviewInfo = infoKey => browserWindow.webContents.on(infoKey, infoValue => infoValue)\n\n//webview sends plugin info\nexport const sendPluginInfo = (infoKey, infoValue) => window.postMessage(infoKey, infoValue).then(res => res)\n\n//webview gets plugin info\nexport const getPluginInfo = objectOrString => objectOrString","module.exports = require(\"sketch\");","module.exports = require(\"sketch/settings\");","module.exports = require(\"sketch/ui\");"],"sourceRoot":""}